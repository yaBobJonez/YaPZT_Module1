name: Статичний аналіз та збірка

on:
  workflow_dispatch:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main
      - 'release/**'

jobs:
  build-test-analyze-linux:
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - name: Отримання репозиторія
        uses: actions/checkout@v4

      - name: Встановлення Qt (новіша версія)
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.2'
      
      - name: Встановлення залежностей
        run: |
          sudo apt update
          sudo apt install -y libgtest-dev cppcheck

      - name: Встановлення Build Wrapper (для SonarCloud)
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4

      - name: Збірка проєкту
        run: |
          cmake -B build -S src -DCMAKE_BUILD_TYPE=Release
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build --parallel

      - name: Збереження виконуваного файлу
        uses: actions/upload-artifact@v4
        with:
          name: TaskList_Demo.x86_64
          path: build/TaskList_Demo

      - name: Запуск тестів
        run: |
          cd build
          ctest -V --output-on-failure | tee ../test-results.txt
        continue-on-error: true

      - name: Збереження результатів тестів
        uses: actions/upload-artifact@v4
        with:
          name: test-results.txt
          path: test-results.txt

      - name: Статичний аналіз через SonarQube
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"
